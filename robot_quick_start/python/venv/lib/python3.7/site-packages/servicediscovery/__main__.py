# coding: utf-8

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals

import argparse
import json
import sys

import servicediscovery


def print_result(result, format_):
    if format_ == "json":
        print(json.dumps(result, indent=4))
    else:
        print("unspoorted format:", format_, file=sys.stderr)
        sys.exit(1)


def lookup(psm, format="json"):
    result = servicediscovery.lookup(psm)
    print_result(result, format)


def get_one(psm, cluster=None, format="json"):
    result = servicediscovery.get_one(psm, cluster=cluster)
    print_result(result, format)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Service discovery')
    parser.add_argument('--format', default='json')
    subparsers = parser.add_subparsers(dest='subparser_name')

    lookup_parser = subparsers.add_parser('lookup')
    lookup_parser.add_argument('psm')

    select_parser = subparsers.add_parser('get_one')
    select_parser.add_argument('psm')
    select_parser.add_argument('--cluster', default=None)
    lookup_parser.add_argument('--format', default='json')

    args = parser.parse_args()
    if args.subparser_name == 'lookup':
        lookup(args.psm, format=args.format)
    elif args.subparser_name == 'get_one':
        get_one(args.psm, cluster=args.cluster, format=args.format)
    else:
        raise ValueError('invalid sub command')
