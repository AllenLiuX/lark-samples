# coding: utf-8

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals


import copy
import threading

from .context import global_context


class Thread(threading.Thread):
    def _bootstrap_inner(self, *args, **kwargs):
        if self._context_store:
            global_context.thread_local.store = self._context_store
        return super(Thread, self)._bootstrap_inner(*args, **kwargs)


    def __bootstrap_inner(self, *args, **kwargs):
        # backword compatity for python2
        if self._context_store:
            global_context.thread_local.store = self._context_store
        return super(Thread, self).__bootstrap_inner(*args, **kwargs)

    def start(self):
        self._context_store = copy.deepcopy(getattr(global_context.thread_local, "store", {}))
        super(Thread, self).start()
