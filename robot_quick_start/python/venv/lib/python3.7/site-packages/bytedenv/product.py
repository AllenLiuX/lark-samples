# coding: utf-8
from __future__ import absolute_import, division, print_function, unicode_literals

import os

from .callcache import callcache
from .idc import DC_BOE, get_idc_name, DC_BOEI18N, DC_BOEXFL


@callcache
def is_testing():  # type: () -> bool
    """If run in testing environment.

    :returns: True or False
    :rtype: bool
    """
    return os.environ.get('TESTING_PREFIX') == 'offline'


@callcache
def is_boe():  # type: () -> bool
    """If run in boe environment.

    :returns: True or False
    :rtype: bool
    """
    return get_idc_name() in [DC_BOE, DC_BOEI18N, DC_BOEXFL] or os.environ.get('TCE_HOST_ENV') == DC_BOE


@callcache
def is_product():  # type: () -> bool
    """If run in product environment.

    :returns: True or False
    :rtype: bool
    """
    if is_testing() or is_boe():
        return False

    if os.environ.get('IS_PROD_RUNTIME'):
        return True

    if os.environ.get('SERVICE_ENV'):
        return True

    return False


@callcache
def is_volcano_cloud():  # type: () -> bool
    """If run in volcano cloud environment.

    :returns: True or False
    :rtype: bool
    """
    return os.environ.get("PAAS_CLOUD_ENV") == "VOLCANO"
